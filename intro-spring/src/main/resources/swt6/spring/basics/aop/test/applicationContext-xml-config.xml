<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--<bean id="workLog" class="swt6.spring.basics.aop.logic.WorkLogImpl"/>

    <bean id="traceAdvice" class="swt6.spring.basics.aop.advice.TraceAdvice"/>-->

    <!-- Version 2 -->
    <aop:aspectj-autoproxy/>
    <context:component-scan base-package="swt6.spring.basics.aop"/>

    <!-- Version 1
    <aop:config>
        <aop:aspect id="traceAspect" ref="traceAdvice" >

            <aop:pointcut id="findMethods" expression="execution(public * swt6.spring.basics.aop.logic..*find*(..))"/>

            <aop:pointcut id="findByIdMethods" expression="execution(public * swt6.spring.basics.aop.logic..*find*ById*(..))"/>

            <aop:before method="traceBefore" pointcut-ref="findMethods"/>
            <aop:after method="traceAfter" pointcut-ref="findMethods"/>
            <aop:after method="traceAround" pointcut-ref="findByIdMethods"/>
            <aop:after-throwing method="traceException" pointcut-ref="findMethods" throwing="exception"/>

        </aop:aspect>
    </aop:config> -->
        <!-- PointCut: auf welche konstrukt im code soll aspekt ausgeführt werden - hier alle die public in diesem package und in methoden namen ein find und belibiege parameter -->
        <!-- trace araound umhüllt tracebefore und traceafter -->

</beans>